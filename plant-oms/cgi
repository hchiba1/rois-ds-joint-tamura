#!/usr/bin/perl

print "Content-type: text/html\n\n";

print "<!DOCTYPE html>\n";
print "<html>\n";
print "<head>\n";
print "<meta charset='utf-8'>\n";
print "<title>Plant Orthology Meta-search</title>\n";
print "<link href='/cgi/css/style.css' rel='stylesheet'>\n";
print "</head>\n";
print "<body>\n";

my $DIR = "/home/chiba/share/orth/plant";
my $SPARQL_DIR = "/home/chiba/share/github/hchiba1/rois-ds-joint-tamura/plant-oms/sparql";

my $GENE = $ENV{PATH_INFO};
if ($GENE =~ /^\/(\S+)$/) {
    $GENE = $1;
}

my %REFSEQ2GENE = ();
read_refseq2gene("$DIR/ncbi/3702_gene2refseq.tsv");
read_refseq2gene("$DIR/ncbi/3847_gene2refseq.tsv");

my %GENE_INFO = ();
read_gene_info();

my %SAVED_REFSEQ = ();
my $ORGANISM1 = "";
my $ORGANISM2 = "";
if ($GENE =~ /^(\d+)$/) {
    my @refseq = ();
    my @refseq1 = read_gene2refseq("$DIR/ncbi/3702_gene2refseq.tsv", $GENE);
    if (@refseq1) {
        @refseq = @refseq1;
        $ORGANISM1 = "Arabidopsis thaliana";
        $ORGANISM2 = "Glycine max";
    }
    my @refseq2 = read_gene2refseq("$DIR/ncbi/3847_gene2refseq.tsv", $GENE);
    if (@refseq2) {
        @refseq = @refseq2;
        $ORGANISM1 = "Glycine max";
        $ORGANISM2 = "Arabidopsis thaliana";
    }
    print "<h3>Query</h3>";
    print "<table border='1' style='font-size: 0.9em'>\n";
    print "<thead>\n";
    print "<td>Organism</td>\n";
    print "<td>LocusTag</td>\n";
    print "<td>Symbol</td>\n";
    print "<td>Gene ID</td>\n";
    print "<td>RefSeq IDs</td>\n";
    print "<td>Description</td>\n";
    print "</thead>\n";
    print "<tr>\n";
    print "<td>$ORGANISM1</td>\n";
    print "<td>$GENE_INFO{$GENE}{locus_tag}</td>\n";
    print "<td>$GENE_INFO{$GENE}{symbol}</td>\n";
    print "<td>$GENE</td>\n";
    print "<td>@refseq</td>\n";
    print "<td>$GENE_INFO{$GENE}{descr}</td>\n";
    print "</tr>\n";
    print "</table>\n";
    @refseq = (@refseq1, @refseq2);

    if (@refseq) {
        print "<h3>OrthoFinder Results</h3>";
        print_orthofinder_results();
    }

    my $ensembl_result = get_ensembl($GENE_INFO{$GENE}{locus_tag});
    if ($ensembl_result) {
        my @line = split(/\n/, $ensembl_result);
        print "<h3>Ensembl Results</h3>";
        print "<table border='1' style='font-size: 0.9em'>\n";
        print "<thead>\n";
        print "<td>Organism</td>\n";
        print "<td>Gene ID</td>\n";
        print "<td>Protein ID</td>\n";
        print "<td>identity</td>\n";
        print "<td>homology_identity</td>\n";
        print "<td>wga_coverage</td>\n";
        print "<td>homology_type</td>\n";
        print "<td>is_high_confidence</td>\n";
        print "</thead>\n";
        for my $line (@line) {
            my @f = split(/\t/, $line);
            print "<tr>\n";
            print "<td>$ORGANISM2</td>\n";
            print "<td>$f[0]</td>\n";
            print "<td>$f[1]</td>\n";
            print "<td>$f[2]</td>\n";
            print "<td>$f[3]</td>\n";
            print "<td>$f[4]</td>\n";
            print "<td>$f[5]</td>\n";
            print "<td>$f[6]</td>\n";
            print "</tr>\n";
        }
        print "</table>\n";
    }
}

if (%SAVED_REFSEQ) {
    my $param = "";
    for my $key (keys %SAVED_REFSEQ) {
        $key =~ s/.\d+$//;
        $param .= "'$key'\n";
    }
    print "<h3>OMA Results</h3>";
    print "Viridiplantae (green plants)\n";
    my $sparql_oma = "";
    if ($ORGANISM1 eq "Arabidopsis thaliana") {
        $sparql_oma = "$SPARQL_DIR/oma.rq";
    } elsif ($ORGANISM1 eq "Glycine max") {
        $sparql_oma = "$SPARQL_DIR/oma2.rq";
    }
    my @oma_result = `echo "$param" | $sparql_oma 33090`;
    chomp(@oma_result);
    if (@oma_result) {
        print "<table border='1' style='font-size: 0.9em'>\n";
        print "<thead>\n";
        print "<td>Organism</td>\n";
        print "<td>Locus tag</td>\n";
        print "<td>Gene ID</td>\n";
        print "</thead>\n";
        for my $oma_result (@oma_result) {
            $oma_result =~ s/"//g;
            print "<tr>\n";
            print "<td>$ORGANISM2</td>\n";
            print "<td>$GENE_INFO{$oma_result}{locus_tag}</td>\n";
            print "<td>$oma_result</td>\n";
            print "</tr>\n";
        }
        print "</table>\n";
    }
    print "<br>Embryophyta (land plants)\n";
    my @oma_result2 = `echo "$param" | $sparql_oma 3193`;
    chomp(@oma_result2);
    if (@oma_result2) {
        print "<table border='1' style='font-size: 0.9em'>\n";
        print "<thead>\n";
        print "<td>Organism</td>\n";
        print "<td>Locus tag</td>\n";
        print "<td>Gene ID</td>\n";
        print "</thead>\n";
        for my $oma_result (@oma_result2) {
            $oma_result =~ s/"//g;
            print "<tr>\n";
            print "<td>$ORGANISM2</td>\n";
            print "<td>$GENE_INFO{$oma_result}{locus_tag}</td>\n";
            print "<td>$oma_result</td>\n";
            print "</tr>\n";
        }
        print "</table>\n";
    }
    print "<h3>OrthoDB Results</h3>";
    print "Viridiplantae (green plants)\n";
    my $sparql_orthodb = "";
    if ($ORGANISM1 eq "Arabidopsis thaliana") {
        $sparql_orthodb = "$SPARQL_DIR/orthodb.rq";
    } elsif ($ORGANISM1 eq "Glycine max") {
        $sparql_orthodb = "$SPARQL_DIR/orthodb2.rq";
    }
    print_orthodb_results("$sparql_orthodb 33090 $GENE");
    print "<br>Embryophyta (land plants)\n";
    print_orthodb_results("$sparql_orthodb 3193 $GENE");
    print "<br>\n";
}

print "</body>\n";
print "</html>\n";

################################################################################
### Function ###################################################################
################################################################################

sub get_ensembl {
    my ($locust_tag) = @_;

    my $out = "";
    open(FILE, "$DIR/ensembl/glycine_max-arabidopsis_thaliana") || die "$!";
    while (<FILE>) {
        chomp;
        my @f = split(/\t/, $_);
        if ($f[5] eq $locust_tag) {
            my $gene = $f[0];
            my $protein = $f[1];
            my $identity = $f[8];
            my $type = $f[4];
            my $homology_identity = $f[3];
            my $coverage = $f[12];
            my $confidence = $f[13];
            $out .= "$gene\t$protein\t$identity\t$homology_identity\t$coverage\t$type\t$confidence\n";
        }
        if ($f[0] eq $locust_tag) {
            my $gene = $f[5];
            my $protein = $f[6];
            my $identity = $f[3];
            my $type = $f[4];
            my $homology_identity = $f[8];
            my $coverage = $f[12];
            my $confidence = $f[13];
            $out .= "$gene\t$protein\t$identity\t$homology_identity\t$coverage\t$type\t$confidence\n";
        }
    }
    close(FILE);

    return $out;
}

sub read_gene_info {
    my ($gene_info) = @_;
    
    open(FILE, "$DIR/ncbi/gene_info.tsv") || die "$!";
    while (my $line = <FILE>) {
        my @f = split(/\t/, $line);
        my $gene_id = $f[1];
        my $symbol = $f[2];
        my $locus_tag = $f[3];
        my $descr = $f[8];
        $locus_tag =~ s/v4$//;
        $GENE_INFO{$gene_id}{symbol} = $symbol;
        $GENE_INFO{$gene_id}{locus_tag} = $locus_tag;
        $GENE_INFO{$gene_id}{descr} = $descr;
    }
    close(FILE);
}

sub read_refseq2gene {
    my ($gene2refseq) = @_;

    open(FILE, "$gene2refseq") || die "$!";
    while (my $line = <FILE>) {
        chomp($line);
        my @f = split(/\t/, $line);
        my $gene_id = $f[1];
        my $status = $f[2];
        my $nm = $f[3];
        my $np = $f[5];
        $REFSEQ2GENE{$np} = $gene_id;
    }
    close(FILE);
}

sub print_orthofinder_results {
    my %group_members_1 = ();
    my %group_members_2 = ();
    my $hit_group = "";
    open(ORTHOGROUPS, "$DIR/Orthogroups.tsv") || die "$!";
    while (<ORTHOGROUPS>) {
        chomp;
        s/\r$//;
        my @f = split(/\t/, $_, -1);
        if (@f != 3) {
            die;
        }
        my $orthogroup = $f[0];
        my $members_1 = $f[1];
        my $members_2 = $f[2];
        if ($orthogroup =~ /^OG\d+$/) {
            if ($members_1) {
                my @members_1 = split(", ", $members_1);
                for my $member (@members_1) {
                    if ($SAVED_REFSEQ{$member}) {
                        $hit_group = $orthogroup;
                    }
                    $group_members_1{$orthogroup}{$member} = 1;
                }
            }
            if ($members_2) {
                my @members_2 = split(", ", $members_2);
                for my $member (@members_2) {
                    if ($SAVED_REFSEQ{$member}) {
                        $hit_group = $orthogroup;
                    }
                    $group_members_2{$orthogroup}{$member} = 1;
                }
            }
        }
    }
    close(ORTHOGROUPS);
    print "<table border='1' style='font-size: 0.9em'>\n";
    print "<thead>\n";
    print "<td>Organism</td>\n";
    print "<td>LocusTag</td>\n";
    print "<td>RefSeq ID</td>\n";
    print "<td>Gene ID</td>\n";
    print "<td>Symbol</td>\n";
    print "<td>Description</td>\n";
    print "</thead>\n";
    my @out1 = keys %{$group_members_1{$hit_group}};
    for my $out1 (@out1) {
        $out1 =~ s/\s//g;
        if ($SAVED_REFSEQ{$out1}) {
            next;
        }
        my $gene = $REFSEQ2GENE{$out1};
        print "<tr>\n";
        print "<td>Arabidopsis thaliana</td>\n";
        print "<td>$GENE_INFO{$gene}{locus_tag}</td>\n";
        print "<td>$out1</td>\n";
        print "<td>$REFSEQ2GENE{$out1}</td>\n";
        print "<td>$GENE_INFO{$gene}{symbol}</td>\n";
        print "<td>$GENE_INFO{$gene}{descr}</td>\n";
        print "</tr>\n";
    }
    my @out2 = keys %{$group_members_2{$hit_group}};
    for my $out2 (@out2) {
        $out2 =~ s/\s//g;
        if ($SAVED_REFSEQ{$out2}) {
            next;
        }
        if ($out2) {
            my $gene = $REFSEQ2GENE{$out2};
            print "<tr>\n";
            print "<td>Glycine max</td>\n";
            print "<td>$GENE_INFO{$gene}{locus_tag}</td>\n";
            print "<td>$out2</td>\n";
            print "<td>$REFSEQ2GENE{$out2}</td>\n";
            print "<td>$GENE_INFO{$gene}{symbol}</td>\n";
            print "<td>$GENE_INFO{$gene}{descr}</td>\n";
            print "</tr>\n";
        }
    }
    print "</table>\n";
}

sub read_gene2refseq {
    my ($gene2refseq, $gene) = @_;

    my %hash = ();

    open(FILE, "$gene2refseq") || die "$!";
    while (my $line = <FILE>) {
        chomp($line);
        my @f = split(/\t/, $line);
        my $gene_id = $f[1];
        my $status = $f[2];
        my $nm = $f[3];
        my $np = $f[5];
        if ($gene_id eq $gene) {
            if ($nm ne "-" or $np ne "-") {
                $hash{$status}{$nm}{$np} = 1;
                $SEED{$np} = 1;
            }
        }
    }
    close(FILE);

    my @refseq = ();
    my $out = "<table border='1' style='font-size: 0.9em'>\n";
    $out .= "<thead>\n";
    $out .= "<tr style='color: navy'>\n";
    $out .= "<td>Status</td>";
    $out .= "<td>RefSeq protein ID</td>";
    $out .= "<td>RefSeq RNA ID</td>";
    $out .= "</tr>\n";
    $out .= "</thead>\n";
    for my $status (sort {$b cmp $a} keys %hash) {
        for my $nm (sort keys %{$hash{$status}}) {
            for my $np (sort keys %{$hash{$status}{$nm}}) {
                $out .= "<tr>\n";
                $out .= "<td>$status</td>";
                $out .= "<td>$np</td>";
                $out .= "<td>$nm</td>";
                $out .= "</tr>\n";
                push @refseq, $np;
                $SAVED_REFSEQ{$np} = 1;
            }
        }
    }
    $out .= "</table>\n";

    return @refseq;
}

sub print_orthodb_results {
    my ($command_line) = @_;

    my @orthodb_result = `$command_line`;
    if (@orthodb_result) {
        print "<table border='1' style='font-size: 0.9em'>\n";
        print "<thead>\n";
        print "<td>Organism</td>\n";
        print "<td>Locus tag</td>\n";
        print "<td>Gene ID</td>\n";
        print "<td>Symbol</td>\n";
        print "<td>Description</td>\n";
        print "</thead>\n";
        my %hash;
        for my $orthodb_result (@orthodb_result) {
            $orthodb_result =~ s/"//g;
            my @f = split(/\t/, $orthodb_result);
            my $locus_tag = $GENE_INFO{$f[1]}{locus_tag};
            my $line = "<tr>";
            $line .= "<td>$ORGANISM2</td>";
            $line .= "<td>$locus_tag</td></td>";
            $line .= "<td>$f[1]</td>";
            $line .= "<td>$f[0]</td>";
            $line .= "<td>$f[2]</td>";
            $line .= "</tr>";
            $hash{$locus_tag} = $line;
        }
        print_sorted(\%hash);
        print "</table>\n";
    }
}

sub print_sorted {
    my ($r_hash) = @_;

    my @sorted_keys = sort {$a cmp $b} keys %{$r_hash};
    for my $key (@sorted_keys) {
        print "${$r_hash}{$key}\n";
    }
}
